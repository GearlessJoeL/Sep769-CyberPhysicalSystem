{"ast":null,"code":"var _jsxFileName = \"/home/joel/code/Sep728/smart-lock-frontend/src/components/RecognitionResult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { usePubNub } from 'pubnub-react';\nimport { CHANNEL } from '../index';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecognitionResult = ({\n  type\n}) => {\n  _s();\n  const [status, setStatus] = useState(null);\n  const pubnub = usePubNub();\n  useEffect(() => {\n    const handleMessage = event => {\n      const message = event.message;\n      if (message.type === type) {\n        setStatus({\n          success: message.state === 1,\n          name: message.name,\n          time: message.time\n        });\n      }\n    };\n    pubnub.addListener({\n      message: handleMessage\n    });\n    return () => {\n      pubnub.removeListener({\n        message: handleMessage\n      });\n    };\n  }, [pubnub, type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `status-container ${status !== null && status !== void 0 && status.success ? 'status-success' : 'status-error'}`,\n    children: status ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-text\",\n        children: status.success ? 'Authentication Successful' : 'Waiting for authentication...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), status.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-name\",\n        children: status.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-text\",\n      children: \"Waiting for authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(RecognitionResult, \"GDaYQfR9tZs0bCenoBDufCmzqxg=\", false, function () {\n  return [usePubNub];\n});\n_c = RecognitionResult;\nexport default RecognitionResult;\nvar _c;\n$RefreshReg$(_c, \"RecognitionResult\");","map":{"version":3,"names":["React","useState","useEffect","usePubNub","CHANNEL","jsxDEV","_jsxDEV","Fragment","_Fragment","RecognitionResult","type","_s","status","setStatus","pubnub","handleMessage","event","message","success","state","name","time","addListener","removeListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/joel/code/Sep728/smart-lock-frontend/src/components/RecognitionResult.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { usePubNub } from 'pubnub-react';\nimport { CHANNEL } from '../index';\n\nconst RecognitionResult = ({ type }) => {\n  const [status, setStatus] = useState(null);\n  const pubnub = usePubNub();\n\n  useEffect(() => {\n    const handleMessage = (event) => {\n      const message = event.message;\n      if (message.type === type) {\n        setStatus({\n          success: message.state === 1,\n          name: message.name,\n          time: message.time\n        });\n      }\n    };\n\n    pubnub.addListener({ message: handleMessage });\n\n    return () => {\n      pubnub.removeListener({ message: handleMessage });\n    };\n  }, [pubnub, type]);\n\n  return (\n    <div className={`status-container ${status?.success ? 'status-success' : 'status-error'}`}>\n      {status ? (\n        <>\n          <div className=\"status-text\">\n            {status.success ? 'Authentication Successful' : 'Waiting for authentication...'}\n          </div>\n          {status.name && <div className=\"user-name\">{status.name}</div>}\n        </>\n      ) : (\n        <div className=\"status-text\">Waiting for authentication...</div>\n      )}\n    </div>\n  );\n};\n\nexport default RecognitionResult;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMa,MAAM,GAAGX,SAAS,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAIC,KAAK,IAAK;MAC/B,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO;MAC7B,IAAIA,OAAO,CAACP,IAAI,KAAKA,IAAI,EAAE;QACzBG,SAAS,CAAC;UACRK,OAAO,EAAED,OAAO,CAACE,KAAK,KAAK,CAAC;UAC5BC,IAAI,EAAEH,OAAO,CAACG,IAAI;UAClBC,IAAI,EAAEJ,OAAO,CAACI;QAChB,CAAC,CAAC;MACJ;IACF,CAAC;IAEDP,MAAM,CAACQ,WAAW,CAAC;MAAEL,OAAO,EAAEF;IAAc,CAAC,CAAC;IAE9C,OAAO,MAAM;MACXD,MAAM,CAACS,cAAc,CAAC;QAAEN,OAAO,EAAEF;MAAc,CAAC,CAAC;IACnD,CAAC;EACH,CAAC,EAAE,CAACD,MAAM,EAAEJ,IAAI,CAAC,CAAC;EAElB,oBACEJ,OAAA;IAAKkB,SAAS,EAAE,oBAAoBZ,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEM,OAAO,GAAG,gBAAgB,GAAG,cAAc,EAAG;IAAAO,QAAA,EACvFb,MAAM,gBACLN,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACEnB,OAAA;QAAKkB,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzBb,MAAM,CAACM,OAAO,GAAG,2BAA2B,GAAG;MAA+B;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,EACLjB,MAAM,CAACQ,IAAI,iBAAId,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEb,MAAM,CAACQ;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eAC9D,CAAC,gBAEHvB,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAChE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCIF,iBAAiB;EAAA,QAENN,SAAS;AAAA;AAAA2B,EAAA,GAFpBrB,iBAAiB;AAuCvB,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}