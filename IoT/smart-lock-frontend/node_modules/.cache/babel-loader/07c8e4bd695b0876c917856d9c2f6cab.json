{"ast":null,"code":"var _jsxFileName = \"/home/joel/code/Sep728/smart-lock-frontend/src/components/FingerPrint.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useBiometrics } from '../hooks/useBiometrics';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FingerPrint = () => {\n  _s();\n  const [isScanning, setIsScanning] = useState(false);\n  const {\n    recognitionData,\n    startRecognition,\n    stopRecognition\n  } = useBiometrics();\n  useEffect(() => {\n    if (isScanning) {\n      startRecognition('fingerprint'); // Specify the recognition type\n    } else {\n      stopRecognition('fingerprint');\n    }\n    return () => {\n      stopRecognition('fingerprint');\n    };\n  }, [isScanning, startRecognition, stopRecognition]);\n  const handleScanToggle = () => {\n    setIsScanning(!isScanning);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fingerprint Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleScanToggle,\n      text: isScanning ? 'Cancel Scan' : 'Start Scan',\n      variant: isScanning ? 'secondary' : 'primary'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), recognitionData && recognitionData.type === 'fingerprint' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-${recognitionData.success ? 'success' : 'error'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scan Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recognitionData.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), recognitionData.matchPercentage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"match-percentage\",\n        children: [\"Match: \", recognitionData.matchPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timestamp\",\n        children: new Date(recognitionData.timestamp).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Place your finger on the scanner...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(FingerPrint, \"1gbuwBgxerHx5gEgsktqnqYfLFs=\", false, function () {\n  return [useBiometrics];\n});\n_c = FingerPrint;\nexport default FingerPrint;\nvar _c;\n$RefreshReg$(_c, \"FingerPrint\");","map":{"version":3,"names":["React","useState","useEffect","useBiometrics","Button","jsxDEV","_jsxDEV","FingerPrint","_s","isScanning","setIsScanning","recognitionData","startRecognition","stopRecognition","handleScanToggle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","variant","type","success","message","matchPercentage","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["/home/joel/code/Sep728/smart-lock-frontend/src/components/FingerPrint.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useBiometrics } from '../hooks/useBiometrics';\nimport Button from './Button';\n\nconst FingerPrint = () => {\n  const [isScanning, setIsScanning] = useState(false);\n  const { recognitionData, startRecognition, stopRecognition } = useBiometrics();\n\n  useEffect(() => {\n    if (isScanning) {\n      startRecognition('fingerprint'); // Specify the recognition type\n    } else {\n      stopRecognition('fingerprint');\n    }\n\n    return () => {\n      stopRecognition('fingerprint');\n    };\n  }, [isScanning, startRecognition, stopRecognition]);\n\n  const handleScanToggle = () => {\n    setIsScanning(!isScanning);\n  };\n\n  return (\n    <div className=\"status-container\">\n      <h2>Fingerprint Scanner</h2>\n      <Button\n        onClick={handleScanToggle}\n        text={isScanning ? 'Cancel Scan' : 'Start Scan'}\n        variant={isScanning ? 'secondary' : 'primary'}\n      />\n      \n      {recognitionData && recognitionData.type === 'fingerprint' && (\n        <div className={`status-${recognitionData.success ? 'success' : 'error'}`}>\n          <h3>Scan Results:</h3>\n          <p>{recognitionData.message}</p>\n          {recognitionData.matchPercentage && (\n            <p className=\"match-percentage\">Match: {recognitionData.matchPercentage}%</p>\n          )}\n          <p className=\"timestamp\">\n            {new Date(recognitionData.timestamp).toLocaleString()}\n          </p>\n        </div>\n      )}\n\n      {isScanning && (\n        <div className=\"scanner-animation\">\n          <p>Place your finger on the scanner...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FingerPrint;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}