{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nimport { usePubNub } from 'pubnub-react';\nimport { CHANNEL } from '../index';\nexport const useBiometrics = () => {\n  _s();\n  const pubnub = usePubNub();\n  const [recognitionData, setRecognitionData] = useState(null);\n\n  // Set up listener when hook is initialized\n  useEffect(() => {\n    const handleMessage = event => {\n      if (event.channel === CHANNEL) {\n        setRecognitionData({\n          success: event.message.success,\n          message: event.message.message,\n          matchPercentage: event.message.matchPercentage,\n          type: event.message.type\n        });\n      }\n    };\n    pubnub.addListener({\n      message: handleMessage\n    });\n    return () => {\n      pubnub.removeListener({\n        message: handleMessage\n      });\n    };\n  }, [pubnub]);\n  const startRecognition = useCallback(type => {\n    pubnub.publish({\n      channel: CHANNEL,\n      message: {\n        command: 'START_RECOGNITION',\n        type: type,\n        timestamp: new Date().toISOString()\n      }\n    });\n  }, [pubnub]);\n  const stopRecognition = useCallback(type => {\n    pubnub.publish({\n      channel: CHANNEL,\n      message: {\n        command: 'STOP_RECOGNITION',\n        type: type,\n        timestamp: new Date().toISOString()\n      }\n    });\n    setRecognitionData(null);\n  }, [pubnub]);\n  return {\n    recognitionData,\n    startRecognition,\n    stopRecognition\n  };\n};\n_s(useBiometrics, \"ch/r2Elm4/rB3dtAU2Mc7b0wRhg=\", false, function () {\n  return [usePubNub];\n});","map":{"version":3,"names":["useState","useCallback","useEffect","usePubNub","CHANNEL","useBiometrics","_s","pubnub","recognitionData","setRecognitionData","handleMessage","event","channel","success","message","matchPercentage","type","addListener","removeListener","startRecognition","publish","command","timestamp","Date","toISOString","stopRecognition"],"sources":["/home/joel/code/Sep728/smart-lock-frontend/src/hooks/useBiometrics.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { usePubNub } from 'pubnub-react';\nimport { CHANNEL } from '../index';\n\nexport const useBiometrics = () => {\n    const pubnub = usePubNub();\n    const [recognitionData, setRecognitionData] = useState(null);\n\n    // Set up listener when hook is initialized\n    useEffect(() => {\n        const handleMessage = (event) => {\n            if (event.channel === CHANNEL) {\n                setRecognitionData({\n                    success: event.message.success,\n                    message: event.message.message,\n                    matchPercentage: event.message.matchPercentage,\n                    type: event.message.type\n                });\n            }\n        };\n\n        pubnub.addListener({ message: handleMessage });\n\n        return () => {\n            pubnub.removeListener({ message: handleMessage });\n        };\n    }, [pubnub]);\n\n    const startRecognition = useCallback((type) => {\n        pubnub.publish({\n            channel: CHANNEL,\n            message: {\n                command: 'START_RECOGNITION',\n                type: type,\n                timestamp: new Date().toISOString()\n            }\n        });\n    }, [pubnub]);\n\n    const stopRecognition = useCallback((type) => {\n        pubnub.publish({\n            channel: CHANNEL,\n            message: {\n                command: 'STOP_RECOGNITION',\n                type: type,\n                timestamp: new Date().toISOString()\n            }\n        });\n\n        setRecognitionData(null);\n    }, [pubnub]);\n\n    return {\n        recognitionData,\n        startRecognition,\n        stopRecognition\n    };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,OAAO,QAAQ,UAAU;AAElC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,MAAM,GAAGJ,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACAE,SAAS,CAAC,MAAM;IACZ,MAAMQ,aAAa,GAAIC,KAAK,IAAK;MAC7B,IAAIA,KAAK,CAACC,OAAO,KAAKR,OAAO,EAAE;QAC3BK,kBAAkB,CAAC;UACfI,OAAO,EAAEF,KAAK,CAACG,OAAO,CAACD,OAAO;UAC9BC,OAAO,EAAEH,KAAK,CAACG,OAAO,CAACA,OAAO;UAC9BC,eAAe,EAAEJ,KAAK,CAACG,OAAO,CAACC,eAAe;UAC9CC,IAAI,EAAEL,KAAK,CAACG,OAAO,CAACE;QACxB,CAAC,CAAC;MACN;IACJ,CAAC;IAEDT,MAAM,CAACU,WAAW,CAAC;MAAEH,OAAO,EAAEJ;IAAc,CAAC,CAAC;IAE9C,OAAO,MAAM;MACTH,MAAM,CAACW,cAAc,CAAC;QAAEJ,OAAO,EAAEJ;MAAc,CAAC,CAAC;IACrD,CAAC;EACL,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,MAAMY,gBAAgB,GAAGlB,WAAW,CAAEe,IAAI,IAAK;IAC3CT,MAAM,CAACa,OAAO,CAAC;MACXR,OAAO,EAAER,OAAO;MAChBU,OAAO,EAAE;QACLO,OAAO,EAAE,mBAAmB;QAC5BL,IAAI,EAAEA,IAAI;QACVM,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACtC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,MAAMkB,eAAe,GAAGxB,WAAW,CAAEe,IAAI,IAAK;IAC1CT,MAAM,CAACa,OAAO,CAAC;MACXR,OAAO,EAAER,OAAO;MAChBU,OAAO,EAAE;QACLO,OAAO,EAAE,kBAAkB;QAC3BL,IAAI,EAAEA,IAAI;QACVM,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACtC;IACJ,CAAC,CAAC;IAEFf,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,OAAO;IACHC,eAAe;IACfW,gBAAgB;IAChBM;EACJ,CAAC;AACL,CAAC;AAACnB,EAAA,CArDWD,aAAa;EAAA,QACPF,SAAS;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}