{"ast":null,"code":"import PubNub from 'pubnub';\nexport const getDefaultConfig = () => ({\n  subscribeKey: 'demo',\n  publishKey: 'demo',\n  uuid: 'default-user',\n  channel: 'demo-channel'\n});\nexport const initializePubNub = () => {\n  const settings = localStorage.getItem('pubnub_settings');\n  if (settings) {\n    const {\n      subscribeKey,\n      publishKey,\n      uuid\n    } = JSON.parse(settings);\n    return new PubNub({\n      subscribeKey,\n      publishKey,\n      uuid,\n      ssl: true\n    });\n  }\n  const defaultConfig = getDefaultConfig();\n  return new PubNub({\n    subscribeKey: defaultConfig.subscribeKey,\n    publishKey: defaultConfig.publishKey,\n    uuid: defaultConfig.uuid,\n    ssl: true\n  });\n};\nexport const getChannel = () => {\n  const settings = localStorage.getItem('pubnub_settings');\n  if (settings) {\n    return JSON.parse(settings).channel;\n  }\n  return getDefaultConfig().channel;\n};","map":{"version":3,"names":["PubNub","getDefaultConfig","subscribeKey","publishKey","uuid","channel","initializePubNub","settings","localStorage","getItem","JSON","parse","ssl","defaultConfig","getChannel"],"sources":["/home/joel/code/Sep728/smart-lock-frontend/src/utils/pubnub-config.js"],"sourcesContent":["import PubNub from 'pubnub';\n\nexport const getDefaultConfig = () => ({\n  subscribeKey: 'demo',\n  publishKey: 'demo',\n  uuid: 'default-user',\n  channel: 'demo-channel'\n});\n\nexport const initializePubNub = () => {\n  const settings = localStorage.getItem('pubnub_settings');\n  if (settings) {\n    const { subscribeKey, publishKey, uuid } = JSON.parse(settings);\n    return new PubNub({\n      subscribeKey,\n      publishKey,\n      uuid,\n      ssl: true\n    });\n  }\n  const defaultConfig = getDefaultConfig();\n  return new PubNub({\n    subscribeKey: defaultConfig.subscribeKey,\n    publishKey: defaultConfig.publishKey,\n    uuid: defaultConfig.uuid,\n    ssl: true\n  });\n};\n\nexport const getChannel = () => {\n  const settings = localStorage.getItem('pubnub_settings');\n  if (settings) {\n    return JSON.parse(settings).channel;\n  }\n  return getDefaultConfig().channel;\n};"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAE3B,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,MAAO;EACrCC,YAAY,EAAE,MAAM;EACpBC,UAAU,EAAE,MAAM;EAClBC,IAAI,EAAE,cAAc;EACpBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpC,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EACxD,IAAIF,QAAQ,EAAE;IACZ,MAAM;MAAEL,YAAY;MAAEC,UAAU;MAAEC;IAAK,CAAC,GAAGM,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;IAC/D,OAAO,IAAIP,MAAM,CAAC;MAChBE,YAAY;MACZC,UAAU;MACVC,IAAI;MACJQ,GAAG,EAAE;IACP,CAAC,CAAC;EACJ;EACA,MAAMC,aAAa,GAAGZ,gBAAgB,CAAC,CAAC;EACxC,OAAO,IAAID,MAAM,CAAC;IAChBE,YAAY,EAAEW,aAAa,CAACX,YAAY;IACxCC,UAAU,EAAEU,aAAa,CAACV,UAAU;IACpCC,IAAI,EAAES,aAAa,CAACT,IAAI;IACxBQ,GAAG,EAAE;EACP,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAME,UAAU,GAAGA,CAAA,KAAM;EAC9B,MAAMP,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EACxD,IAAIF,QAAQ,EAAE;IACZ,OAAOG,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAACF,OAAO;EACrC;EACA,OAAOJ,gBAAgB,CAAC,CAAC,CAACI,OAAO;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}