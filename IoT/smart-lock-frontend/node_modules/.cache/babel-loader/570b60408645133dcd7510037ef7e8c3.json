{"ast":null,"code":"var _jsxFileName = \"/home/joel/code/Sep728/smart-lock-frontend/src/components/NFCReader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNFC } from '../hooks/useNFC';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFCReader = () => {\n  _s();\n  const [isScanning, setIsScanning] = useState(false);\n  const {\n    nfcData,\n    error,\n    startScan,\n    stopScan\n  } = useNFC();\n  useEffect(() => {\n    if (isScanning) {\n      startScan();\n    } else {\n      stopScan();\n    }\n    return () => {\n      stopScan();\n    };\n  }, [isScanning, startScan, stopScan]);\n  const handleScanToggle = () => {\n    setIsScanning(!isScanning);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"NFC Reader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleScanToggle,\n      text: isScanning ? 'Cancel Scan' : 'Start NFC Scan',\n      variant: isScanning ? 'secondary' : 'primary',\n      disabled: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), nfcData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-${nfcData.success ? 'success' : 'error'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"NFC Scan Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: nfcData.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), nfcData.tagId && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tag-id\",\n        children: [\"Tag ID: \", nfcData.tagId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timestamp\",\n        children: new Date(nfcData.timestamp).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), isScanning && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please tap your NFC card...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(NFCReader, \"MNQYqbxp5U2FbRVOZS18jUtypWQ=\", false, function () {\n  return [useNFC];\n});\n_c = NFCReader;\nexport default NFCReader;\nvar _c;\n$RefreshReg$(_c, \"NFCReader\");","map":{"version":3,"names":["React","useState","useEffect","useNFC","Button","jsxDEV","_jsxDEV","NFCReader","_s","isScanning","setIsScanning","nfcData","error","startScan","stopScan","handleScanToggle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","variant","disabled","success","message","tagId","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["/home/joel/code/Sep728/smart-lock-frontend/src/components/NFCReader.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNFC } from '../hooks/useNFC';\nimport Button from './Button';\n\nconst NFCReader = () => {\n  const [isScanning, setIsScanning] = useState(false);\n  const { nfcData, error, startScan, stopScan } = useNFC();\n\n  useEffect(() => {\n    if (isScanning) {\n      startScan();\n    } else {\n      stopScan();\n    }\n\n    return () => {\n      stopScan();\n    };\n  }, [isScanning, startScan, stopScan]);\n\n  const handleScanToggle = () => {\n    setIsScanning(!isScanning);\n  };\n\n  return (\n    <div className=\"status-container\">\n      <h2>NFC Reader</h2>\n      <Button\n        onClick={handleScanToggle}\n        text={isScanning ? 'Cancel Scan' : 'Start NFC Scan'}\n        variant={isScanning ? 'secondary' : 'primary'}\n        disabled={!!error}\n      />\n\n      {error && (\n        <div className=\"status-error\">\n          <p>{error}</p>\n        </div>\n      )}\n\n      {nfcData && (\n        <div className={`status-${nfcData.success ? 'success' : 'error'}`}>\n          <h3>NFC Scan Results:</h3>\n          <p>{nfcData.message}</p>\n          {nfcData.tagId && (\n            <p className=\"tag-id\">Tag ID: {nfcData.tagId}</p>\n          )}\n          <p className=\"timestamp\">\n            {new Date(nfcData.timestamp).toLocaleString()}\n          </p>\n        </div>\n      )}\n\n      {isScanning && !error && (\n        <div className=\"scanner-animation\">\n          <p>Please tap your NFC card...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NFCReader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}